import logging
from telegram import Update
from telegram.ext import ContextTypes
from PustoBot.sheets import get_title_status_data

logger = logging.getLogger(__name__)

async def status_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ù–∞–¥–∞—î —Å—Ç–∞—Ç—É—Å —É—Å—ñ—Ö —Ä–æ–∑–¥—ñ–ª—ñ–≤ –¥–ª—è –≤–∫–∞–∑–∞–Ω–æ–≥–æ —Ç–∞–π—Ç–ª—É."""
    message = update.message
    text = message.text[len("/status "):].strip()
    title = text
    
    if not title:
        await update.message.reply_text("‚ö†Ô∏è –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∫–∞–∂—ñ—Ç—å –Ω–∞–∑–≤—É —Ç–∞–π—Ç–ª—É. –ù–∞–ø—Ä–∏–∫–ª–∞–¥: `/status –í—ñ–¥—å–º–æ–≤–∞—Ä—Ç–∞`")
        return
    
    original_title, status_report = get_title_status_data(title)

    if original_title is None:
        await update.message.reply_text(f"‚ö†Ô∏è –¢–∞–π—Ç–ª '{title}' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∞–±–æ –¥–ª—è –Ω—å–æ–≥–æ –Ω–µ–º–∞—î –¥–∞–Ω–∏—Ö.")
        return

    if not status_report:
        await update.message.reply_text(f"üìä –î–ª—è —Ç–∞–π—Ç–ª—É '{original_title}' —â–µ –Ω–µ–º–∞—î –∂–æ–¥–Ω–æ–≥–æ —Ä–æ–∑–¥—ñ–ª—É.")
        return

    response_lines = [f"üìä *–°—Ç–∞—Ç—É—Å —Ç–∞–π—Ç–ª—É '{original_title}':*\n"]
    
    for item in status_report:
        chapter_number = item['chapter']
        status_text = "‚úÖ –û–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω–æ" if item['published'] else "‚ùå –í —Ä–æ–±–æ—Ç—ñ"
        response_lines.append(f"–†–æ–∑–¥—ñ–ª *{chapter_number}* ‚Äî {status_text}")

    await update.message.reply_text("\n".join(response_lines), parse_mode="Markdown")