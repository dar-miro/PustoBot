import logging
from telegram import Update
from telegram.ext import ContextTypes
from PustoBot.sheets import get_title_status_data
from thread import get_thread_number # –ù–æ–≤–∏–π —ñ–º–ø–æ—Ä—Ç

logger = logging.getLogger(__name__)

async def status_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ù–∞–¥–∞—î —Å—Ç–∞—Ç—É—Å —É—Å—ñ—Ö —Ä–æ–∑–¥—ñ–ª—ñ–≤ –¥–ª—è –≤–∫–∞–∑–∞–Ω–æ–≥–æ —Ç–∞–π—Ç–ª—É."""
    message = update.message
    text = message.text[len("/status "):].strip()
    title_identifier = text
    
    if not title_identifier:
        # –Ø–∫—â–æ –≤ –≥—ñ–ª—Ü—ñ —ñ –Ω–µ–º–∞—î —Ç–µ–∫—Å—Ç—É, —à—É–∫–∞—î–º–æ –ù–æ–º–µ—Ä –¢–∞–π—Ç–ª—É –∑ –≥—ñ–ª–∫–∏
        title_identifier = get_thread_number(message.message_thread_id)
    
    if not title_identifier:
        await update.message.reply_text("‚ö†Ô∏è –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∫–∞–∂—ñ—Ç—å –Ω–∞–∑–≤—É —Ç–∞–π—Ç–ª—É –∞–±–æ –π–æ–≥–æ –Ω–æ–º–µ—Ä. –ù–∞–ø—Ä–∏–∫–ª–∞–¥: `/status –í—ñ–¥—å–º–æ–≤–∞—Ä—Ç–∞` –∞–±–æ `/status 1`.")
        return
    
    # title_identifier –º–æ–∂–µ –±—É—Ç–∏ –ù–∞–∑–≤–∞ –∞–±–æ –ù–æ–º–µ—Ä
    original_title, status_report = get_title_status_data(title_identifier)

    if original_title is None:
        await update.message.reply_text(f"‚ö†Ô∏è –¢–∞–π—Ç–ª '{title_identifier}' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∞–±–æ –¥–ª—è –Ω—å–æ–≥–æ –Ω–µ–º–∞—î –¥–∞–Ω–∏—Ö.")
        return

    if not status_report:
        await update.message.reply_text(f"üìä –î–ª—è —Ç–∞–π—Ç–ª—É '{original_title}' —â–µ –Ω–µ–º–∞—î –∂–æ–¥–Ω–æ–≥–æ —Ä–æ–∑–¥—ñ–ª—É.")
        return

    response_lines = [f"üìä *–°—Ç–∞—Ç—É—Å —Ç–∞–π—Ç–ª—É '{original_title}':*\n"]
    
    for item in status_report:
        chapter_number = item['chapter']
        # –†–æ–ª—ñ
        role_statuses = []
        role_order = ["–∫–ª—ñ–Ω", "–ø–µ—Ä–µ–∫–ª–∞–¥", "—Ç–∞–π–ø", "—Ä–µ–¥–∞–∫—Ç"]
        for role_key in role_order:
            status = item['roles'].get(role_key)
            if status is not None:
                status_char = "‚úÖ" if status else "‚ùå"
                role_statuses.append(f"{role_key}: {status_char}")
        
        roles_text = " | ".join(role_statuses)
        
        # –°—Ç–∞—Ç—É—Å –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó
        status_pub = "‚úÖ –û–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω–æ" if item['published'] else "‚ùå –í —Ä–æ–±–æ—Ç—ñ"
        
        response_lines.append(f"*{chapter_number}* ‚Äî {status_pub}\n  _({roles_text})_")

    await update.message.reply_text("\n".join(response_lines), parse_mode="Markdown")