# thread.py
from telegram import Update
from telegram.ext import (
    ContextTypes, ConversationHandler, CommandHandler,
    MessageHandler, filters
)

from PustoBot.sheets import get_title_number_and_name 

# –°—Ç–∞–Ω —Ä–æ–∑–º–æ–≤–∏
ASK_TITLE_IDENTIFIER = range(1) 

# üß† –ü–∞–º º—è—Ç—å —Ç–∞–π—Ç–ª—ñ–≤ –∑–∞ –≥—ñ–ª–∫–æ—é: { thread_id: (title_number, original_title) }
thread_title_map = {} 

def set_thread_title_and_number(thread_id, title_number, title_name):
    """–ó–±–µ—Ä—ñ–≥–∞—î –ø—Ä–∏–≤'—è–∑–∫—É –≥—ñ–ª–∫–∞ ‚Üí (–ù–æ–º–µ—Ä, –ù–∞–∑–≤–∞)."""
    thread_title_map[thread_id] = (str(title_number), title_name)

def get_thread_title_and_number(thread_id):
    """–ü–æ–≤–µ—Ä—Ç–∞—î (title_number, title_name)."""
    return thread_title_map.get(thread_id, (None, None))

def get_thread_number(thread_id):
    """–ü–æ–≤–µ—Ä—Ç–∞—î –ª–∏—à–µ –Ω–æ–º–µ—Ä —Ç–∞–π—Ç–ª—É –¥–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≤ —ñ–Ω—à–∏—Ö –º–æ–¥—É–ª—è—Ö (–∑–∞–≤–¥–∞–Ω–Ω—è 2)."""
    return thread_title_map.get(thread_id, (None, None))[0]

# üßµ /thread ‚Äî —Å—Ç–∞—Ä—Ç —Ä–æ–∑–º–æ–≤–∏. –û—á—ñ–∫—É—î –ù–∞–∑–≤—É –∞–±–æ –ù–æ–º–µ—Ä —Ç–∞–π—Ç–ª—É.
async def thread_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.chat.type != "supergroup":
        await update.message.reply_text("‚ö†Ô∏è –ö–æ–º–∞–Ω–¥–∞ `/thread` –¥–æ—Å—Ç—É–ø–Ω–∞ –ª–∏—à–µ –≤ –≥—ñ–ª–∫–∞—Ö —Å—É–ø–µ—Ä–≥—Ä—É–ø.")
        return ConversationHandler.END
    
    # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ message_thread_id –¥–ª—è –ø—Ä–∏–≤'—è–∑–∫–∏
    if not update.message.message_thread_id:
        await update.message.reply_text("‚ö†Ô∏è –¶—é –∫–æ–º–∞–Ω–¥—É –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –≤ –≥—ñ–ª—Ü—ñ (—Ç–æ–ø—ñ–∫—É)!")
        return ConversationHandler.END

    await update.message.reply_text("üìù –í–≤–µ–¥–∏ *–ù–∞–∑–≤—É* –∞–±–æ *–ù–æ–º–µ—Ä* —Ç–∞–π—Ç–ª—É –¥–ª—è –ø—Ä–∏–≤'—è–∑–∫–∏ –¥–æ —Ü—ñ—î—ó –≥—ñ–ª–∫–∏:", parse_mode="Markdown")
    return ASK_TITLE_IDENTIFIER

# –ù–∞–∑–≤–∞ –∞–±–æ –ù–æ–º–µ—Ä —Ç–∞–π—Ç–ª—É
async def ask_title_identifier(update: Update, context: ContextTypes.DEFAULT_TYPE):
    title_identifier = update.message.text.strip()
    thread_id = update.message.message_thread_id 

    # 1. –ó–Ω–∞—Ö–æ–¥–∏–º–æ –Ω–æ–º–µ—Ä —Ç–∞ –Ω–∞–∑–≤—É —Ç–∞–π—Ç–ª—É
    title_number, original_title = get_title_number_and_name(title_identifier)

    if not original_title:
        await update.message.reply_text(f"‚ö†Ô∏è –¢–∞–π—Ç–ª '{title_identifier}' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ —Ç–∞–±–ª–∏—Ü—ñ.")
        return ConversationHandler.END

    # 2. –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø—Ä–∏–≤'—è–∑–∫—É –≥—ñ–ª–∫–∞ ‚Üí (–ù–æ–º–µ—Ä, –ù–∞–∑–≤–∞)
    set_thread_title_and_number(thread_id, title_number, original_title)
    
    await update.message.reply_text(
        f"‚úÖ –ì—ñ–ª–∫–∞ —É—Å–ø—ñ—à–Ω–æ –ø—Ä–∏–≤'—è–∑–∞–Ω–∞ –¥–æ —Ç–∞–π—Ç–ª—É:\n*{original_title}* (–ù–æ–º–µ—Ä: *{title_number}*).",
        parse_mode="Markdown"
    )
    return ConversationHandler.END

# –í–∏—Ö—ñ–¥
async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("‚ùå –î—ñ—é —Å–∫–∞—Å–æ–≤–∞–Ω–æ.")
    return ConversationHandler.END

# Handler –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –≤ main.py
def get_thread_handler():
    return ConversationHandler(
        entry_points=[CommandHandler("thread", thread_command)],
        states={
            ASK_TITLE_IDENTIFIER: [MessageHandler(filters.TEXT & ~filters.COMMAND, ask_title_identifier)],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )