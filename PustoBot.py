from telegram import Update
from telegram.ext import ContextTypes
import re
from datetime import datetime

def parse_message(text):
    pattern = r"(\S+)\s+(\S+)\s+(\S+)\s+\((–∫–ª—ñ–Ω|—Ç–∞–π–ø|–ø–µ—Ä–µ–∫–ª–∞–¥|—Ä–µ–¥–∞–∫—Ç)\)"
    match = re.search(pattern, text, re.IGNORECASE)
    if match:
        return match.groups()
    return None

async def process_input(update: Update, context: ContextTypes.DEFAULT_TYPE, sheet, text: str):
    result = parse_message(text)
    if result:
        title, chapter, position, work_type = result
        row = [
            datetime.now().strftime("%Y-%m-%d %H:%M"),
            update.message.from_user.full_name,
            title,
            chapter,
            position,
            work_type
        ]
        sheet.append_row(row)
        await update.message.reply_text("‚úÖ –î–∞–Ω—ñ –¥–æ–¥–∞–Ω–æ –¥–æ —Ç–∞–±–ª–∏—Ü—ñ.")
    else:
        await update.message.reply_text("‚ö†Ô∏è –ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç. –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π: –ù–∞–∑–≤–∞ –†–æ–∑–¥—ñ–ª –ü–æ–∑–∏—Ü—ñ—è (—Ç–∏–ø)")

# üîπ /start
async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤—ñ—Ç! –ù–∞–¥—ñ—à–ª–∏ –º–µ–Ω—ñ:\n"
        "–ù–∞–∑–≤–∞ –†–æ–∑–¥—ñ–ª –ü–æ–∑–∏—Ü—ñ—è (–∫–ª—ñ–Ω/—Ç–∞–π–ø/–ø–µ—Ä–µ–∫–ª–∞–¥/—Ä–µ–¥–∞–∫—Ç)\n"
        "–∞–±–æ —Å–∫–æ—Ä–∏—Å—Ç–∞–π—Å—è –∫–æ–º–∞–Ω–¥–æ—é /add —É —Ç–∞–∫–æ–º—É –∂ —Ñ–æ—Ä–º–∞—Ç—ñ.")

# üîπ –û–±—Ä–æ–±–∫–∞ –∑–≤–∏—á–∞–π–Ω–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ —Ç–µ–≥–æ–º –±–æ—Ç–∞
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE, sheet):
    message = update.message
    if not message or not message.text:
        return

    bot_username = context.bot.username.lower()
    if bot_username in message.text.lower():
        await process_input(update, context, sheet, message.text)

# üîπ –û–±—Ä–æ–±–∫–∞ /add
async def add_command(update: Update, context: ContextTypes.DEFAULT_TYPE, sheet):
    message = update.message
    if not message or not message.text:
        return

    text = message.text[len("/add "):].strip()
    await process_input(update, context, sheet, text)
